buildscript {
	ext {
        springBootVersion = '1.4.0.RELEASE'
        baseImage = "omar-base"
        dockerStatementsOverride = {
       [
          "FROM ${project.dockerNamespaceUrl}${project.ext.baseImage}:${project.dockerAppTag}",
          "MAINTAINER DigitalGlobe-RadiantBlue",
          """LABEL com.digitalglobe.version="" """,
          "USER root",
          "ENV HOME /home/omar",
          "RUN useradd -u 1001 -r -g 0 --create-home -d \$HOME -s /sbin/nologin -c 'Default Application User' omar",
          "COPY ${project.name}-${buildVersion}-${buildVersionTag}.jar /home/omar",
          'RUN find $HOME -type d -exec chmod g+x {} +',
          "USER 1001",
//          "WORKDIR /home/omar",
          "VOLUME /dev/random /home /Users",
          "EXPOSE 8761",
          "CMD java -Xms256m -Xmx1024m -Dspring.profiles.active=production -Djava.security.egd=file:/dev/./urandom -Dserver.contextPath=/omar-turbine-server -jar /home/omar/${project.name}-${buildVersion}-${buildVersionTag}.jar"
       ]
     }
	}
  if(System.env.OMAR_COMMON_PROPERTIES)
  {
      apply from: System.env.OMAR_COMMON_PROPERTIES
  }
   repositories {
      mavenLocal()
      maven { url "${ossimMavenProxy}" }
      mavenCentral()
   }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
    id "org.sonarqube" version "2.5"
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: "maven"
group "io.ossim.omar.apps"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenLocal()
  maven { url "${ossimMavenProxy}" }
  mavenCentral()
}


dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-hystrix-dashboard')
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile('org.springframework.cloud:spring-cloud-starter-eureka')
	compile('org.springframework.cloud:spring-cloud-starter-turbine')
	compile('org.codehaus.groovy:groovy')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.SR7"
	}
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
}
